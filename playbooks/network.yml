##
# 设置静态IP地址
#
#
##
# @leif160519 @2020.09.05
####
---
- name: 设置静态IP
  hosts: all
  tags: network
  vars:
    dns1: 180.76.76.76
    dns2: 114.114.114.114
    search: localdomain
  tasks:
    - package:
        name: uuid
        state: latest

    - shell: uuid
      register: network_uuid

    - find: #为什么不用with_fileglob?:因为它只能获取ansible本机的文件名，不能获取远端的
        path: /etc/netplan
        patterns: "*.yaml"
      register: network_config

    - set_fact: # {{{ | 变量定义
        ubuntu_version: 18.04
        interface: "{{ ansible_default_ipv4['interface'] }}"
        uuid: "{{ network_uuid.stdout }}"
        address: "{{ ansible_default_ipv4['address'] }}"
        netmask: "{{ ansible_default_ipv4['netmask'] }}"
        gateway: "{{ ansible_default_ipv4['gateway'] }}"
        # }}}

    - shell: | # {{{ 计算子网掩码
        maskdigits () {
            a=$(echo "$1" | awk -F "." '{print $1" "$2" "$3" "$4}')
            for num in $a;
            do
                while [ $num != 0 ];do
                echo -n $(($num%2)) >> /tmp/num;
                num=$(($num/2));
                done
            done
            echo $(grep -o "1" /tmp/num | wc -l)
            rm /tmp/num
        }
        maskdigits "{{ netmask }}"
      register: netmask_new

    - set_fact:
        netmask1: "{{ netmask_new.stdout }}"
      # }}}

    - template: # {{{ ip配置文件设置
        backup: yes
        src: files/network/00-installer-config.yaml.j2
        dest: "{{ item.path }}"
        mode: 0644
      with_items:
        - "{{ network_config.files }}"
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version is version(ubuntu_version,">=")

    - template:
        backup: yes
        src: files/network/interfaces.j2
        dest: /etc/network/interfaces
        mode: 0644
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_version is version(ubuntu_version,"<"))

    - template:
        backup: yes
        src: files/network/interfaces-debian.j2
        dest: /etc/network/interfaces
        mode: 0644
      when: ((ansible_distribution == "Debian") and (not ansible_distribution == "Ubuntu"))

    - template:
        backup: yes
        src: files/network/ifcfg-eth0.j2
        dest: /etc/sysconfig/network-scripts/ifcfg-{{ interface }}
        mode: 0644
      when: ansible_os_family == "RedHat"
      # }}}

    - shell: netplan apply # {{{ 使网络生效
      when: ansible_distribution == "Ubuntu" and ansible_distribution_version is version(ubuntu_version,">=")

    - service:
        name: networking
        state: restarted
      when: (ansible_distribution == "Ubuntu" and ansible_distribution_version is version(ubuntu_version,"<"))  or (ansible_distribution == "Debian")

    - service:
        name: network
        state: restarted
      when: ansible_os_family == "RedHat"
      # }}}
